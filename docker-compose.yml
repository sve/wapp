version: '3'
services:
    nginx:
        build:
            context: ./.docker/nginx
            dockerfile: Dockerfile
            args:
                - TAG=stable-alpine
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        image: app-nginx
        ports:
            - '${APP_PORT:-80}:80'
        volumes:
            - .:/var/www/html
        depends_on:
            - php
        networks:
            - default

    php:
        build:
            context: ./.docker/php
            dockerfile: Dockerfile
            args:
                - TAG=8.2.0-fpm-alpine
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        image: app-php
        volumes:
            - .:/var/www/html
        networks:
            - default
        depends_on:
            - mysql
            - redis
            - elasticsearch

    mysql:
        image: mysql/mysql-server:8.0
        ports:
            - '${FORWARD_MYSQL_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - data-mysql:/var/lib/mysql
        networks:
            - default

    redis:
        image: redis:alpine
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - data-redis:/data
        networks:
            - default

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
        ports:
            - '${FORWARD_ELASTICSEARCH_PORT:-9200}:9200'
        environment:
            - bootstrap.memory_lock=true
            - discovery.type=single-node
            - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
            - ELASTIC_USERNAME=${ELASTICSEARCH_USER:-elastic}
            - ELASTIC_PASSWORD=${ELASTICSEARCH_PASS:-elastic}
            - xpack.security.enabled=true
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - data-elasticsearch:/data
        networks:
            - default

    queue:
        build:
            context: ./.docker/php
            dockerfile: Dockerfile
            args:
                - TAG=8.2.0-fpm-alpine
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        image: queue-php
        command: php artisan queue:work
        volumes:
            - .:/var/www/html
        networks:
            - default
        depends_on:
            - mysql
            - redis
            - elasticsearch

volumes:
    data-mysql:
    data-redis:
    data-elasticsearch:

networks:
    default:
